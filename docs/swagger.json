{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Assessment Tax API for Go Bootcamp",
        "title": "Assessment Tax API",
        "contact": {
            "name": "Tanawat Hongthai",
            "url": "https://github.com/ztrixack/assessment-tax.git",
            "email": "ztrixack.th@gmail.com"
        },
        "version": "1.0"
    },
    "paths": {
        "/": {
            "get": {
                "description": "Hello, Go Bootcamp!",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Hello, Go Bootcamp!",
                "responses": {
                    "200": {
                        "description": "Hello, Go Bootcamp!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/deductions/personal": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Sets the personal deduction based on the provided request parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin/deductions"
                ],
                "summary": "Set personal deduction",
                "parameters": [
                    {
                        "description": "Input request for setting personal deduction",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.DeductionsPersonalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully response with updated deduction details",
                        "schema": {
                            "$ref": "#/definitions/admin.DeductionsPersonalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request if the input validation fails",
                        "schema": {
                            "$ref": "#/definitions/admin.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/admin.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error if there is a problem setting the deduction",
                        "schema": {
                            "$ref": "#/definitions/admin.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tax/calculations": {
            "post": {
                "description": "This endpoint calculates the tax and potentially applicable tax refund and tax levels based on the provided total income, withholding tax, and allowances.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tax"
                ],
                "summary": "Calculate Tax",
                "parameters": [
                    {
                        "description": "Input request for tax calculation",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tax.CalculationsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully calculated tax and returns the tax details",
                        "schema": {
                            "$ref": "#/definitions/tax.CalculationsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request if the input validation fails",
                        "schema": {
                            "$ref": "#/definitions/tax.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error if the tax calculations service fails",
                        "schema": {
                            "$ref": "#/definitions/tax.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tax/calculations/upload-csv": {
            "post": {
                "description": "Uploads a CSV file and parses it to JSON.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tax"
                ],
                "summary": "Upload CSV file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Upload CSV tax file",
                        "name": "taxFile",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully parsed tax data",
                        "schema": {
                            "$ref": "#/definitions/tax.UploadCSVResponse"
                        }
                    },
                    "400": {
                        "description": "Unable to process the file, error in file retrieval or content",
                        "schema": {
                            "$ref": "#/definitions/tax.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error, failed to read CSV header or records",
                        "schema": {
                            "$ref": "#/definitions/tax.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin.DeductionsPersonalRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "maximum": 100000,
                    "minimum": 10000,
                    "example": 60000
                }
            }
        },
        "admin.DeductionsPersonalResponse": {
            "type": "object",
            "properties": {
                "personalDeduction": {
                    "type": "number"
                }
            }
        },
        "admin.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "github_com_ztrixack_assessment-tax_internal_handlers_tax.Allowance": {
            "type": "object",
            "required": [
                "allowanceType"
            ],
            "properties": {
                "allowanceType": {
                    "type": "string",
                    "enum": [
                        "donation",
                        "k-receipt"
                    ],
                    "example": "donation"
                },
                "amount": {
                    "type": "number",
                    "minimum": 0,
                    "example": 0
                }
            }
        },
        "tax.CalculationsRequest": {
            "type": "object",
            "properties": {
                "allowances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_ztrixack_assessment-tax_internal_handlers_tax.Allowance"
                    }
                },
                "totalIncome": {
                    "type": "number",
                    "minimum": 0,
                    "example": 500000
                },
                "wht": {
                    "type": "number",
                    "minimum": 0,
                    "example": 0
                }
            }
        },
        "tax.CalculationsResponse": {
            "type": "object",
            "properties": {
                "tax": {
                    "type": "number"
                },
                "taxLevel": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tax.TaxLevel"
                    }
                },
                "taxRefund": {
                    "type": "number"
                }
            }
        },
        "tax.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "tax.Tax": {
            "type": "object",
            "properties": {
                "tax": {
                    "type": "number"
                },
                "taxRefund": {
                    "type": "number"
                },
                "totalIncome": {
                    "type": "number"
                }
            }
        },
        "tax.TaxLevel": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "tax": {
                    "type": "number"
                }
            }
        },
        "tax.UploadCSVResponse": {
            "type": "object",
            "properties": {
                "taxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tax.Tax"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}