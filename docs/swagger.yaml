definitions:
  admin.DeductionsKReceiptRequest:
    properties:
      amount:
        example: 50000
        maximum: 100000
        minimum: 0
        type: number
    type: object
  admin.DeductionsKReceiptResponse:
    properties:
      kReceipt:
        type: number
    type: object
  admin.DeductionsPersonalRequest:
    properties:
      amount:
        example: 60000
        maximum: 100000
        minimum: 10000
        type: number
    type: object
  admin.DeductionsPersonalResponse:
    properties:
      personalDeduction:
        type: number
    type: object
  admin.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  github_com_ztrixack_assessment-tax_internal_handlers_tax.Allowance:
    properties:
      allowanceType:
        enum:
        - donation
        - k-receipt
        example: donation
        type: string
      amount:
        example: 0
        minimum: 0
        type: number
    required:
    - allowanceType
    type: object
  tax.CalculationsRequest:
    properties:
      allowances:
        items:
          $ref: '#/definitions/github_com_ztrixack_assessment-tax_internal_handlers_tax.Allowance'
        type: array
      totalIncome:
        example: 500000
        minimum: 0
        type: number
      wht:
        example: 0
        minimum: 0
        type: number
    type: object
  tax.CalculationsResponse:
    properties:
      tax:
        type: number
      taxLevel:
        items:
          $ref: '#/definitions/tax.TaxLevel'
        type: array
      taxRefund:
        type: number
    type: object
  tax.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  tax.Tax:
    properties:
      tax:
        type: number
      taxRefund:
        type: number
      totalIncome:
        type: number
    type: object
  tax.TaxLevel:
    properties:
      level:
        type: string
      tax:
        type: number
    type: object
  tax.UploadCSVResponse:
    properties:
      taxes:
        items:
          $ref: '#/definitions/tax.Tax'
        type: array
    type: object
info:
  contact:
    email: ztrixack.th@gmail.com
    name: Tanawat Hongthai
    url: https://github.com/ztrixack/assessment-tax.git
  description: Assessment Tax API for Go Bootcamp
  title: Assessment Tax API
  version: "1.0"
paths:
  /:
    get:
      description: Hello, Go Bootcamp!
      produces:
      - text/plain
      responses:
        "200":
          description: Hello, Go Bootcamp!
          schema:
            type: string
      summary: Hello, Go Bootcamp!
      tags:
      - system
  /admin/deductions/k-receipt:
    post:
      consumes:
      - application/json
      description: Sets the k-receipt deduction based on the provided request parameters.
      parameters:
      - description: Input request for setting k-receipt deduction
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/admin.DeductionsKReceiptRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with updated deduction details
          schema:
            $ref: '#/definitions/admin.DeductionsKReceiptResponse'
        "400":
          description: Bad request if the input validation fails
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error if there is a problem setting the deduction
      security:
      - BasicAuth: []
      summary: Set k-receipt deduction
      tags:
      - admin/deductions
  /admin/deductions/personal:
    post:
      consumes:
      - application/json
      description: Sets the personal deduction based on the provided request parameters.
      parameters:
      - description: Input request for setting personal deduction
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/admin.DeductionsPersonalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with updated deduction details
          schema:
            $ref: '#/definitions/admin.DeductionsPersonalResponse'
        "400":
          description: Bad request if the input validation fails
          schema:
            $ref: '#/definitions/admin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/admin.ErrorResponse'
        "500":
          description: Internal Server Error if there is a problem setting the deduction
          schema:
            $ref: '#/definitions/admin.ErrorResponse'
      security:
      - BasicAuth: []
      summary: Set personal deduction
      tags:
      - admin/deductions
  /tax/calculations:
    post:
      consumes:
      - application/json
      description: This endpoint calculates the tax and potentially applicable tax
        refund and tax levels based on the provided total income, withholding tax,
        and allowances.
      parameters:
      - description: Input request for tax calculation
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/tax.CalculationsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully calculated tax and returns the tax details
          schema:
            $ref: '#/definitions/tax.CalculationsResponse'
        "400":
          description: Bad request if the input validation fails
          schema:
            $ref: '#/definitions/tax.ErrorResponse'
        "500":
          description: Internal server error if the tax calculations service fails
          schema:
            $ref: '#/definitions/tax.ErrorResponse'
      summary: Calculate Tax
      tags:
      - tax
  /tax/calculations/upload-csv:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a CSV file and parses it to JSON.
      parameters:
      - description: Upload CSV tax file
        in: formData
        name: taxFile
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully parsed tax data
          schema:
            $ref: '#/definitions/tax.UploadCSVResponse'
        "400":
          description: Unable to process the file, error in file retrieval or content
          schema:
            $ref: '#/definitions/tax.ErrorResponse'
        "500":
          description: Internal server error, failed to read CSV header or records
          schema:
            $ref: '#/definitions/tax.ErrorResponse'
      summary: Upload CSV file
      tags:
      - tax
schemes:
- http
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
